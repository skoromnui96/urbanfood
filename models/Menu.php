<?php

namespace app\models;

use app\models\Category;
use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "menu".
 *
 * @property integer $id
 * @property integer $category_id
 * @property string $name
 * @property string $consists
 * @property string $cook
 * @property integer $price
 * @property integer $price30
 * @property integer $price35
 * @property integer $price50
 * @property integer $weight
 * @property string $img
 */
class Menu extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'menu';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['category_id', 'price', 'size', 'weight'], 'integer'],
            [['name', 'consists', 'cook', 'img'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'category_id' => 'Категория',
            'name' => 'Название блюда',
            'consists' => 'Состав',
            'cook' => 'Cook',
            'price' => 'Цена',
            'size' => 'Размер пиццы',
            'weight' => 'Вес',
            'img' => 'Картинка',
        ];
    }
    public function saveImage($filename)
    {
        $this->img = $filename;
        return $this->save(false);
    }

    public function getImage()
    {
        return ($this->img) ? '/images/' . $this->img : '/no-image.png';
    }

    public function deleteImage()
    {
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->img);
    }


    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
    public function getCategory()
    {
        return Category::find()->select('name')->where(['id' => $this->category_id])->one();
    }

    public function getParent()
    {
        return $this->hasOne(Category::className(), ['id' => 'category_id']); // связь таблиц один ко многим
    }

    public function getParentName(){ // функция получения значения из родительской таблицы
        $model=$this->parent;
        return $model ? $model->name : '';
    }
    public static function getCategoryList()
    {
        return  ArrayHelper::map(\app\models\Category::find()->all(),'id','name');
    }

}
